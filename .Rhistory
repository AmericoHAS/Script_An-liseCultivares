if(!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
if(!require(stats)) install.packages("stats")
library(stats)
peso <- c(1222,1195,1118,1002,1452,1062,1195,1414,1768,1482,1753,1805,1870,1598,
1437,1856,1544,1300,1224,1500,2100,2117,2150,1618,2063,2063,1707,1592,
850,928,928,500)
cultivares <- as.factor(rep(c("Baia do Cedo","Texas Grano","Pera IPA 1",
"Pera IPA 2","Pera IPA 3","Pera IPA 4","Pera Ouro",
"Red Creole"),each=4))
blocos <- as.factor(rep(1:4,8))
dados <- data.frame(blocos, cultivares, peso)
ggplot(dados, aes(x=cultivares, y=peso))+
geom_boxplot(fill= 'red' , alpha=0.1 , width=.5, outlier.color = 'red',
outlier.shape =16,outlier.size = 2, outlier.fill = "red",
outlier.alpha = 1)+
stat_summary(fun=mean, geom = 'point', col='blue')+
labs(x='Cultivares', y='Pesos')+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, size=7))
estat2 <- aggregate(dados$peso, by = list(dados$cultivares),
FUN = function(x) c(Mínimo = min(x),
Máximo = max(x),
Média = mean(x),
Desvio_Padrão = sd(x),
Coeficiente_de_Variação = sd(x) / mean(x)))
# Visualize a tabela de estat?sticas
print(estat2)
View(estat2)
bartlett.test(peso ~ cultivares)
m1 <- aov(peso ~ cultivares + blocos , data = dados)
summary(m1)
anova(m1)
shapiro.test(m1)
shapiro.test(m1$residuals)
plot(m1)
par (mfrow = c( 2,2))
plot(m1)
if(!require(hnp)) install.packages("hnp")
library(hnp)
hnp(m1, print.on = T)
par (mfrow = c(1,1))
hnp(m1, print.on = T)
residuosm1 <- rstandard(m1)
hnp(residuosm1, halfnormal = F)
# Visualize a tabela de estat?sticas
print(estat2)
View(estat2)
dados <- data.frame(blocos, cultivares, peso)
View(dados)
setwd("C:/Users/antun/Desktop/HAWARD/Faculdade/3 - PROJETOS/4 - TCC/4. Analise no R")
dados<-read.csv2("dados - cebola") #banco de dados em excel
dados<-read.csv2("dados - cebola") #banco de dados em excel
setwd("C:/Users/antun/Desktop/HAWARD/Faculdade/3 - PROJETOS/4 - TCC/4. Analise no R")
dados<-read.csv2("dados - cebola") #banco de dados em excel
dados<-read.csv2("dados - cebola.csv") #banco de dados em excel
View(dados)
dados <- data.frame(blocos, cultivares, peso)
m1 <- aov(peso ~ cultivares + blocos , data = dados)
summary(m1)
shapiro.test(m1$residuals)
bpteste(m1)
if(!require(hnp)) install.packages("hnp")
library(lmtest) #teste de homocedasticidade
if(!require(lmtest)) install.packages("lmtest")
library(lmtest) #teste de homocedasticidade
bpteste(m1)
bptest(m1)
plot(m1, fill= 'red' , alpha=0.1 , width=.5, outlier.color = 'red',
outlier.shape =16,outlier.size = 2, outlier.fill = "red",
outlier.alpha = 1)
par (mfrow = c(2,2))
plot(m1, fill= 'red' , alpha=0.1 , width=.5, outlier.color = 'red',
outlier.shape =16,outlier.size = 2, outlier.fill = "red",
outlier.alpha = 1)
par (mfrow = c(1,1))
par (mfrow = c(2,2))
plot(m1, fill= 'red' , alpha=0.1 , width=.5, outlier.color = 'red',
outlier.shape =16,outlier.size = 2, outlier.fill = "red",
outlier.alpha = 1)
par (mfrow = c(1,1))
bptest(m1)
par (mfrow = c(2,2))
plot(m1, fill= 'red' , alpha=0.1 , width=.5, outlier.color = 'red',
outlier.shape =16,outlier.size = 2, outlier.fill = "red",
outlier.alpha = 1)
plot(m1, outlier.color = 'red')
plot(m1)
outliers <- identify(m1)
points(outliers, col = "red", pch = 16)
par (mfrow = c(2,2))
# Gráfico padrão
plot(residuals(m1) ~ fitted(m1))
# Identificar outliers (por exemplo, pontos com resíduos grandes)
outliers <- which(abs(residuals(m1)) > 2)  # Ajuste o critério conforme necessário
# Adicionar pontos de outliers em vermelho
points(fitted(m1)[outliers], residuals(m1)[outliers], col = "red", pch = 16)
hnp(m1, print.on = T)
par (mfrow = c(1,1))
hnp(m1, print.on = T)
residuosm1 <- rstandard(m1)
hnp(residuosm1, halfnormal = F)
m2 <- lm(peso ~ cultivares + blocos, data=dados)
summary(m2)
m3 <- lme(peso ~ cultivare, data = dados, random = ~1|blocos, method = "REML")
summary(m3)
if(!require(nlme)) install.packages("nlme")
library(lme4)
library(nlme)
m3 <- lme(peso ~ cultivare, data = dados, random = ~1|blocos, method = "REML")
m3 <- lme(peso ~ cultivares, data = dados, random = ~1|blocos, method = "REML")
summary(m3)
AIC(m1)
AIC(m2)
AIC(m3)
BIC(m1)
BIC(m2)
BIC(m3)
residuosm1 <- rstandard(m1)
hnp(residuosm1, halfnormal = F)
title(main = "Efeitos Fixos")
# m3
hnp(resid(m3, type = "p"), halfnormal = F)
title(main = "Efeitos Aleat?rios")
# m3
hnp(m3, halfnormal = F)
residuosm1 <- rstandard(m1)
hnp(residuosm1, halfnormal = F)
# m3
hnp(resid(m3, type = "p"), halfnormal = F)
# m3
hnp(resid(m3, type = "p"), halfnormal = F)
par (mfrow = c(2,2))
plot(m3)
par (mfrow = c(1,1))
par (mfrow = c(2,2))
plot(m3)
par (mfrow = c(1,1))
hnp(m3, print.on = T)
if(!require(ScottKnott)) install.packages("ScottKnott")
library(ScottKnott)
comparacoes_lsmeans <- lsmeans(m3, pairwise ~ group_var, adjust = "tukey")
comparacoes_lsmeans <- lsmeans(m3, pairwise ~ group_var, adjust = "tukey")
testtukey <- TukeyHSD(m3)
comparacoes_lsmeans <- lsmeans(m3, pairwise ~ group_var, adjust = "tukey")
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
comparacoes_lsmeans <- lsmeans(m3, pairwise ~ group_var, adjust = "tukey")
testtukey <- TukeyHSD(m3)
library(laercio)
if(!require(laercio)) install.packages("laercio")
library(laercio)
library(laercio)
if(!require(laercio)) install.packages("laercio")
library(laercio)
resultado_tukey <- TukeyHSD(m3)
sk2 <-  SK(m3,
which='peso')
sk2 <-  SK(m3, which='peso')
library(nlme)
if(!require(nlme)) install.packages("nlme")
library(lme4)
library(nlme)
sk2 <-  SK(m3, which='peso')
lmer2 <- lmer(peso ~ cultivares + (1|blocos), data=dados)
summary(lmer2)
sk2 <-  SK(lmer2, which='peso')
summary(sk2)
testtukey <- TukeyHSD(m1)
summary(testtukey)
print(testtukey)
if(!require(multcomp)) install.packages("multcomp")
library(multcomp)
# m3
hnp(resid(m3, type = "p"), halfnormal = F)
####### comando tukey final
tukey_resultado <- glht(modelo_lme, linfct = mcp(variavel_fixa = "Tukey"))
####### comando tukey final
tukey_resultado <- glht(m3, linfct = mcp(variavel_fixa = "Tukey"))
####### comando tukey final
tukey_resultado <- glht(m3, linfct = mcp(cultivares = "Tukey"))
# Resumo do teste de Tukey
summary(tukey_resultado)
m3 <- lme(peso ~ cultivares, data = dados, random = ~1|blocos, method = "REML")
summary(m3)
####### comando tukey final
tukey_resultado <- glht(m1, linfct = mcp(cultivares = "Tukey"))
# Resumo do teste de Tukey
summary(tukey_resultado)
library(laercio)
if(!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
if(!require(stats)) install.packages("stats")
library(stats)
if(!require(hnp)) install.packages("hnp")
library(hnp)
if(!require(lmtest)) install.packages("lmtest")
library(lmtest) #teste de homocedasticidade
if(!require(nlme)) install.packages("nlme")
library(lme4)
library(nlme)
if(!require(ScottKnott)) install.packages("ScottKnott")
library(ScottKnott)
if(!require(multcomp)) install.packages("multcomp")
library(multcomp) #teste de tukey no modelo lme
##############################################################################
# 2 . Banco da dados
# info: dados provenientes do livro " Experimentação Agronomica" sobre cuntivares de cebola
peso <- c(1222,1195,1118,1002,1452,1062,1195,1414,1768,1482,1753,1805,1870,1598,
1437,1856,1544,1300,1224,1500,2100,2117,2150,1618,2063,2063,1707,1592,
850,928,928,500)
cultivares <- as.factor(rep(c("Baia do Cedo","Texas Grano","Pera IPA 1",
"Pera IPA 2","Pera IPA 3","Pera IPA 4","Pira Ouro",
"Red Creole"),each=4))
blocos <- as.factor(rep(1:4,8))
dados <- data.frame(blocos, cultivares, peso)
View(dados)
#box plot
ggplot(dados, aes(x=gen,y=diam))+
geom_boxplot(fill= 'red' , alpha=0.1 , width=.5, outlier.color = 'red',
outlier.shape =16,outlier.size = 2, outlier.fill = "red",
outlier.alpha = 1)+
stat_summary(fun=mean, geom = 'point', col='blue')+
labs(x='Genótipos', y='Diâmetro',title = 'BoxPlot Genótipos vs Di?mentro')+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, size=7))
names(dados)<- c( 'gen', 'fl', 'dia', 'diam')
dados<- dados[-which(dados$gen=='G15' | dados$gen=='G16'),]
dados<- transform(dados, gen  = factor(gen, levels = c("G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9", "G10", "G11", "G12", "G13", "G14")),
fl  = factor(fl),
trat = paste(gen, fl, sep=''))
#box plot
ggplot(dados, aes(x=gen,y=diam))+
geom_boxplot(fill= 'red' , alpha=0.1 , width=.5, outlier.color = 'red',
outlier.shape =16,outlier.size = 2, outlier.fill = "red",
outlier.alpha = 1)+
stat_summary(fun=mean, geom = 'point', col='blue')+
labs(x='Genótipos', y='Diâmetro',title = 'BoxPlot Genótipos vs Di?mentro')+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, size=7))
names(dados)<- c( 'gen', 'fl', 'dia', 'diam')
dados<- dados[-which(dados$gen=='G15' | dados$gen=='G16'),]
dados<- transform(dados, gen  = factor(gen, levels = c("G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9", "G10", "G11", "G12", "G13", "G14")),
fl  = factor(fl),
trat = paste(gen, fl, sep=''))
if(!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
if(!require(stats)) install.packages("stats")
library(stats)
if(!require(hnp)) install.packages("hnp")
library(hnp)
if(!require(lmtest)) install.packages("lmtest")
library(lmtest) #teste de homocedasticidade
if(!require(nlme)) install.packages("nlme")
library(lme4)
library(nlme)
if(!require(ScottKnott)) install.packages("ScottKnott")
library(ScottKnott)
if(!require(multcomp)) install.packages("multcomp")
library(multcomp) #teste de tukey no modelo lme
peso <- c(1222,1195,1118,1002,1452,1062,1195,1414,1768,1482,1753,1805,1870,1598,
1437,1856,1544,1300,1224,1500,2100,2117,2150,1618,2063,2063,1707,1592,
850,928,928,500)
cultivares <- as.factor(rep(c("Baia do Cedo","Texas Grano","Pera IPA 1",
"Pera IPA 2","Pera IPA 3","Pera IPA 4","Pira Ouro",
"Red Creole"),each=4))
blocos <- as.factor(rep(1:4,8))
dados <- data.frame(blocos, cultivares, peso)
View(dados)
ggplot(dados, aes(x=cultivares, y=peso))+
geom_boxplot(fill= 'red' , alpha=0.1 , width=.5, outlier.color = 'red',
outlier.shape =16,outlier.size = 2, outlier.fill = "red",
outlier.alpha = 1)+
stat_summary(fun=mean, geom = 'point', col='blue')+
labs(x='Cultivares', y='Pesos')+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, size=7))
estat <- aggregate(dados$peso, by = list(dados$cultivares),
FUN = function(x) c(Mínimo = min(x),
Máximo = max(x),
Média = mean(x),
Desvio_Padrão = sd(x),
Coeficiente_de_Variação = sd(x) / mean(x)))
print(estat)
View(estat)
bartlett.test(peso ~ cultivares) # tem homogeneidade
bartlett.test(peso ~ blocos) # não tem homegeneidade
m1 <- aov(peso ~ cultivares + blocos , data = dados)
shapiro.test(m1$residuals)
bptest(m1) # considera-se a H1 para o modelo
par (mfrow = c(2,2))
plot(m1)
par (mfrow = c(1,1))
# gráfico com intervalo interquartil
hnp(m1, print.on = T)
residuosm1 <- rstandard(m1)
print(residuosm1)
hnp(residuosm1, halfnormal = F)
m3 <- lme(peso ~ cultivares, data = dados, random = ~1|blocos, method = "REML")
shapiro.test(m3$residuals) # tem normalidade
# gráfico com intervalo interquartil
hnp(m3, print.on = T) #possivelmente desconsiderar
m4 <- lmer(peso ~ cultivares + (1|blocos), data=dados)
# gráfico com intervalo interquartil
hnp(m4, print.on = T) #possivelmente desconsiderar
hnp(resid(m3, type = "p"), halfnormal = F)
#m3
sk2 <-  SK(m4,
which='cultivares')
summary(sk2)
AIC(m1)
AIC(m2)
AIC(m3) # menor valor
AIC(m4)
BIC(m1)
BIC(m2)
BIC(m3) # menor valor
BIC(m4)
shapiro.test(m3$residuals) # tem normalidade
AIC(m1)
AIC(m3) # menor valor
BIC(m1)
BIC(m3) # menor valor
# cronstruções gráficas
par (mfrow = c(2,2))
plot(m1)
par (mfrow = c(1,1))
ggplot(dados, aes(x=cultivares, y=peso))+
geom_boxplot(fill= 'red' , alpha=0.1 , width=.5, outlier.color = 'red',
outlier.shape =16,outlier.size = 2, outlier.fill = "red",
outlier.alpha = 1)+
stat_summary(fun=mean, geom = 'point', col='blue')+
labs(x='Cultivares', y='Pesos')+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, size=7))
